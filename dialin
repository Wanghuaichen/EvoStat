#!/usr/bin/xpce
:- dynamic show_conversation/1.

:- pce_begin_class(dialin, dialog, "Conversation").

variable(socket, any, get, "Bluetooth Socket").


initialise(Self, Label:[name], Socket:[any]) :->
	"Have a short conversation over Bluetooth"::
        send_super(Self, initialise(Label)),
	send(Self, slot, socket, Socket),
	send(Self?frame, icon, bitmap('./evo.xpm')), % LOGO
        new(Diatxt, text_buffer),
        new(Editor, editor(Diatxt)),         % Emacs editor

	send(Editor?bindings, function, 'RET', message(Self,enter)),
	screen(DW,DH,WF,HF,_),
	MyW is 30+(DW*WF/100)/2,
	MyH is (DH*HF/100)/2,
	get(Editor,  area, Area),                     % Resize
	send(Area, set(width:=MyW,height:=MyH)),
	send(Self, append, Editor),
	send_super(Self, open, point(300,200)).

enter(Self) :->
	"Stateful command/response window"::
	retract(show_conversation(Self)),
	!,
	send(Self, clear).

enter(Self) :->
	"Stateful command/response window"::
	chain_list(Self?graphicals, [Editor|_]),      % Contents of 
	get(Editor?text_buffer?contents, value, Raw), % Edit pane
	normalize_space(atom(Cmd),Raw),
	( Cmd = reset
	 -> send(Self,reset),
	    send(Self,clear)
	;   talk(Self, Cmd, Editor)
	).

talk(Self, Cmd, Editor) :-
	get(Self, socket, Socket),
	bluetalk(Socket, Cmd, Msg),
	( ( Msg=[] ; string_length(Msg,0) )
	     -> get_super(Self, label, Whoami),
		send(Editor?text_buffer, append, '\nreconnecting('),
		send(Editor?text_buffer, append, Whoami),
		send(Editor?text_buffer, append, ').'),
		send(@Whoami, connect),
		get(@Whoami, socket, NewSocket),
		send(Self, slot, socket, NewSocket)
             ;  send(Editor?text_buffer, append, '\n'),
		send(Editor?text_buffer, append, Msg)
	),
	assert(show_conversation(Self)),
	send(Self, keyboard_focus, Editor).

clear(Self) :->
     chain_list(Self?graphicals, [Editor|_]),
     send(Editor?text_buffer, clear),
     send(Self, keyboard_focus, Editor).

reset(Self) :->
     get(Self, slot, socket, Sock),
     bt_areset(Sock).

:- pce_end_class.
