% LAGOON MODEL:  FOUR COUPLED DIFFERENTIAL EQUATIONS:
% (currently solving with Hindmarsh's LSODE algorithm)
%
%   x is a four-element array of differential equations
%   x(1)           x(2)         x(3)           x(4)
%
% representing the following populations (not concentrations)
% 
% UNINFECTED  -> ADSORBED  -> PRODUCTIVE  ->  PHAGE
%  (cells)        (cells)      (cells)      (particles)

function xdot = f(x,t)
global kg ad ec pp fr h0 vol;
% fr (alias dc-dilution constant) is flow rate in volumes/hour
% h0 is host cell concentration
% vol is volume of lagoon

% Delta adds or subtracts a small portion to get a range of models
% I model plus and minus (this is plus) and plot both curves
  lkg = delta(kg, 0.02); % Local (varied) normal E. coli growth constant
  lad = delta(ad, 0.1);  % Local (varied) adsorption coefficient
  lec = delta(ec, 0.1);  % Local (varied) rate exiting eclipse
  lpp = delta(pp, 0.05); % Local (varied) phage production per cell

  dc = fr;     % new variable so we could model dynamic modification
  % Imagine a dc is computed non-trivially from flow rate (fr)

% Inhibited growth rates for subsequent stages of E. coli
% Ultimately this should be measured for given strains of E. coli and M13
  inhibit = 0.9;
% Infected cells have inhibited growth rate relative to healthy host cells
  kgp = lkg*inhibit;
% Productive cells have inhibited growth rate relative to merely infected cells
  kgpp = kgp*inhibit;


% (1) UNINFECTED HOST flowing in at Dilution Constant * Cells/mL
%           + INFLOW       +   GROWTH   - OUTFLOW  - TRANSFORMATION 

  xdot(1) =   dc*h0*vol    +  lkg*x(1)  - dc*x(1)  - (lad*x(1)*x(4))/vol;

% (2) INFECTED HOST   (previous TRANSFORMED is this equation's INFLOW)

  xdot(2) =  (lad*x(1)*x(4))/vol +  kgp*x(2)  - dc*x(2)  -  lec*x(2);

% (3) PRODUCTIVE HOST : INFLOW from Eclipse state, plus growth, minus dilution 

  xdot(3) =  lec*x(2)      + kgpp*x(3)  - dc*x(3);  % No transformation output
  
% (4) PHAGE :            No Growth      - OUTFLOW   % No transformation output

  xdot(4) =  lpp*x(3)                   - dc*x(4);
  
endfunction
