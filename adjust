:- use_module(library(time)).
:- use_module(newpid).
% The PID algorithm will call get_input/2 and set_output/3,
% but their implementation is PID independent, so they live here.

initPID :-
	pid_controllers(Cs),
	launch_controllers(Cs).

get_input(Component, Level) :-
        get(Component, l, Level).

%
% set_output(Component, Old, New)
%
% For liquid level control, level readings
% result in incremental changes in valve open times.
% Level too high: -inflow  +outflow 
%       too low:  +inflow  -outflow
%
% The Autosampler controls drain valves for the other components
% Lagoon name ends with <digit>: v<digit> is that lagoon's drain
% Otherwise it must be the Cellstat's drain 'v0'
%

set_output(Obj, Old, New) :-
     Inflow is integer(5*(New-Old)),
     adjust(Obj, Inflow).

adjust(Obj, Inflow) :-
     Outflow is -Inflow,
     adjust_valve(Obj,v1,Inflow), % Primary in always v1
     component_index(Obj,N),      % Component determines out
     concat_atom([v,N],Valve),
     component(_,sampler,SObj),
     adjust_valve(SObj,Valve,Outflow).


adjust_valve(Obj, Valve, Amt) :-
      get(Obj, Valve, Setting),
      New is Setting + Amt,
      send(Obj, Valve, New),
      assert(changed(Obj,Valve)).
